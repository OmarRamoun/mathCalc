{"version":3,"sources":["logic/operate.js","logic/calculate.js","components/Button.js","components/Calculator.js","components/Clock.js","components/Header.js","pages/Home.js","pages/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","calculate","obj","buttonName","total","next","test","includes","parseFloat","Button","props","handleClick","text","bind","this","classes","push","classesString","join","type","className","onClick","React","Component","Calculator","useState","setObj","Clock","state","date","Date","updateEveryNSeconds","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","Header","style","color","fontSize","id","to","Home","Quote","quoteAPI","setQuote","fetchRandomeMarhQuote","fetch","then","response","json","data","useEffect","quote","author","Object","keys","length","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f8143303.chunk.js","sourcesContent":["import Big from 'big.js';\r\n\r\nconst operate = (numberOne, numberTwo, operation) => {\r\n  const one = Big(numberOne);\r\n  const two = Big(numberTwo);\r\n  if (operation === '+') {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === '−') {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === '×') {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === '÷') {\r\n    try {\r\n      return one.div(two).toString();\r\n    } catch (err) {\r\n      return \"Can't divide by 0.\";\r\n    }\r\n  }\r\n  if (operation === '%') {\r\n    return one.mod(two).toString();\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n};\r\n\r\nexport default operate;\r\n","import operate from './operate';\r\n\r\nconst isNumber = (item) => /[0-9]+/.test(item);\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nconst calculate = (obj, buttonName) => {\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: '0',\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { ...obj, next: obj.next + buttonName };\r\n      }\r\n      return { ...obj, next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return { ...obj };\r\n      }\r\n      return { ...obj, next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation after pressing '='\r\n  if (!obj.next && obj.total && !obj.operation) {\r\n    return { ...obj, operation: buttonName };\r\n  }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    if (obj.total && !obj.next) {\r\n      return { ...obj, operation: buttonName };\r\n    }\r\n\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n};\r\n\r\nexport default calculate;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// eslint-disable-next-line react/prefer-stateless-function\r\nexport default class Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { handleClick, text } = this.props;\r\n    handleClick(text);\r\n  };\r\n\r\n  render() {\r\n    const { classes, text } = this.props;\r\n    classes.push('py-4', 'border', 'border-custom1', 'fs-5');\r\n    const classesString = classes.join(' ');\r\n    return (\r\n      <button type=\"button\" className={classesString} onClick={this.handleClick}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  classes: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport calculate from '../logic/calculate';\r\nimport Button from './Button';\r\n\r\nconst Calculator = () => {\r\n  const [obj, setObj] = useState({ total: '0', next: null, operation: null });\r\n  const { total, next, operation } = obj;\r\n\r\n  const handleClick = (text) => {\r\n    setObj(calculate(obj, text));\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-9\">\r\n      <div className=\"row mx-0 row-cols-4 text-center\">\r\n        <div className=\"bg-custom1 text-white text-end col-12 py-4 fs-5\" data-testid=\"result\">\r\n          {total}\r\n          {operation}\r\n          {next}\r\n        </div>\r\n        <Button classes={['bg-custom2']} text=\"AC\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"+/-\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"%\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom3']} text=\"&divide;\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"7\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"8\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"9\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom3']} text=\"&times;\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"4\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"5\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"6\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom3']} text=\"&minus;\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"1\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"2\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\"3\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom3']} text=\"+\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2', 'col-6']} text=\"0\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom2']} text=\".\" handleClick={handleClick} />\r\n        <Button classes={['bg-custom3']} text=\"=\" handleClick={handleClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    const { updateEveryNSeconds } = this.props;\n    this.timerID = setInterval(() => this.tick(), 1000 * updateEveryNSeconds);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n    return (\n      <div className=\"col-md-9\">\n        <div className=\"row text-end text-white\">\n          <p>{date.toLocaleTimeString()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  updateEveryNSeconds: PropTypes.number.isRequired,\n};\n","import { AiOutlineMenu } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <nav className=\"navbar navbar-expand-md navbar-light bg-secondary fixed-top\">\n    <div className=\"container-fluid\">\n      <span className=\"navbar-brand text-white\">Math Magicians</span>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <AiOutlineMenu style={{ color: 'white', fontSize: '25px' }} />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav ms-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"v-line d-none d-md-block\" />\n          <li className=\"nav-item\">\n            <Link to=\"/calculator\">Calculator</Link>\n          </li>\n          <li className=\"v-line d-none d-md-block\" />\n          <li className=\"nav-item\">\n            <Link to=\"/quote\">Quote</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","const Home = () => (\n  <div className=\"text-white pt-5\">\n    <h1 className=\"display-1 mb-3\">Welcome to our page!</h1>\n    <p className=\"lead\">\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil dolore fuga odit officia\n      dolores, magnam voluptates provident nam quis, doloremque ratione culpa optio maiores libero\n      suscipit numquam est minima quos obcaecati recusandae labore itaque porro. Minima expedita\n      facere adipisci possimus dolore quia voluptas! Reprehenderit repudiandae totam placeat, at\n      vitae impedit laudantium obcaecati eaque iste, modi recusandae deleniti nulla cum repellendus\n      dignissimos illum cupiditate in! Ullam illo vero perspiciatis veniam illum! Est, ex odio\n      voluptatibus architecto enim voluptate velit quas dicta sit facere! Maiores beatae, ea vel\n      odit possimus deleniti molestias cum. Itaque alias voluptates aperiam molestiae labore\n      recusandae nihil iure?\n    </p>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil dolore fuga odit officia\n      dolores, magnam voluptates provident nam quis, doloremque ratione culpa optio maiores libero\n      suscipit numquam est minima quos obcaecati recusandae labore itaque porro. Minima expedita\n      facere adipisci possimus dolore quia voluptas! Reprehenderit repudiandae totam placeat, at\n      vitae impedit laudantium obcaecati eaque iste, modi recusandae deleniti nulla cum repellendus\n      dignissimos illum cupiditate in! Ullam illo vero perspiciatis veniam illum! Est, ex odio\n      voluptatibus architecto enim voluptate velit quas dicta sit facere! Maiores beatae, ea vel\n      odit possimus deleniti molestias cum. Itaque alias voluptates aperiam molestiae labore\n      recusandae nihil iure?\n    </p>\n  </div>\n);\n\nexport default Home;\n","import { useEffect, useState } from 'react';\n\nconst Quote = () => {\n  const [quoteAPI, setQuote] = useState({});\n\n  const fetchRandomeMarhQuote = () =>\n    fetch('https://random-math-quote-api.herokuapp.com/')\n      .then((response) => response.json())\n      .then((data) => setQuote(data));\n\n  useEffect(() => fetchRandomeMarhQuote(), []);\n\n  const { quote, author } = quoteAPI;\n\n  return (\n    <div className=\"text-white col-9\">\n      <p className=\"lead fs-2\">{Object.keys(quoteAPI).length ? `${quote} - ${author}` : ''}</p>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={fetchRandomeMarhQuote}>\n        Get another one\n      </button>\n    </div>\n  );\n};\n\nexport default Quote;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Calculator from './components/Calculator';\nimport Clock from './components/Clock';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Quote from './pages/Quote';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <main className=\"bg-dark min-vh-100 d-flex flex-column justify-content-center pt-5\">\n          <div className=\"container-md\">\n            <div className=\"row mx-0 justify-content-center\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/calculator\">\n                  <Calculator />\n                  <Clock updateEveryNSeconds={1} />\n                </Route>\n                <Route path=\"/quote\">\n                  <Quote />\n                </Route>\n                <Route path=\"*\">Hello from error</Route>\n              </Switch>\n            </div>\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}